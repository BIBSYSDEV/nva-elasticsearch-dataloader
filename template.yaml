AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    NVA DynamoDB Resources stream reader trigger

Parameters:

  ResourcesTableStreamArn:
    Description: ARN of stream containing events from dynamodb
    Type: String
#    Default: !ImportValue NvaResourcesTableStreamArn

Resources:

  NVAElasticSearch:
    Type: AWS::Elasticsearch::Domain
    Properties:
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
#              AWS: !Sub '${AWS::AccountId}'
#              AWS: "arn:aws:iam::<account-id>:role/service-role/<role-name>"
              AWS: !GetAtt TriggerExecutionRole.Arn
            Action: 'es:*'
            Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*'
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: true
        InstanceCount: 2
        ZoneAwarenessEnabled: true
        InstanceType: t2.medium.elasticsearch
        DedicatedMasterType: t2.medium.elasticsearch
        DedicatedMasterCount: 3
      ElasticsearchVersion: '7.7'
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10
        VolumeType: gp2
      CognitoOptions:
        Enabled: false

#  ElasticSearchPowerUserRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Action:
#              - sts:AssumeRole
#            Principal:
#              Service:
#                - es.amazonaws.com
#      ManagedPolicyArns:
#        - arn:aws:iam::aws:policy/AmazonESCognitoAccess


  TriggerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: writeLog
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'
        - PolicyName: ReadDynamoDBStreams
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetShardIterator
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:ListStreams
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*/stream/*'

  ReadDynamoDBStreamsTrigger:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dynamodb-stream-reader
      Handler: no.unit.nva.dynamodb.DynamoDBStreamHandler::handleRequest
      Runtime: java11
      Role: !GetAtt TriggerExecutionRole.Arn
      MemorySize: 1408
      Environment:
        Variables:
          ELASTICSEARCH_ENDPOINT_ADDRESS: !GetAtt NVAElasticSearch.DomainEndpoint
          ELASTICSEARCH_ENDPOINT_INDEX: resources
          ELASTICSEARCH_ENDPOINT_API_SCHEME: https
          TARGET_SERVICE_URL: https://api.dev.nva.aws.unit.no/publication/

  TriggerLambdaMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      Enabled: true
      EventSourceArn: !Ref ResourcesTableStreamArn
      FunctionName: !Ref ReadDynamoDBStreamsTrigger
      StartingPosition: LATEST


Outputs:
  ReadDynamoDBStreamsTrigger:
    Description: ARN Identifier of the ReadDynamoDBStreamsTrigger
    Value: !GetAtt ReadDynamoDBStreamsTrigger.Arn
#    Export:
#      Name: ReadDynamoDBStreamsTriggerArn